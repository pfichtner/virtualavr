<testsuite name="led_behavior.LED Behavior based on Reference and Value Pins" tests="3" errors="0" failures="0" skipped="0" time="1.510235" timestamp="2024-12-21T09:47:35.352723" hostname="c0337ce7"><testcase classname="led_behavior.LED Behavior based on Reference and Value Pins" name="Value equals 90% of Reference, green led is on" status="passed" time="1.305748"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Value equals 90% of Reference, green led is on
    Given the following aliases are defined ... passed in 0.001s
      | alias      | pin |
      | REFERENCE  | A0  |
      | VALUE      | A1  |
      | GREEN_LED  | D10 |
      | YELLOW_LED | D11 |
      | RED_LED    | D12 |
    Given the pin GREEN_LED is watched ... passed in 0.001s
    And the pin YELLOW_LED is watched ... passed in 0.000s
    And the pin RED_LED is watched ... passed in 0.000s
    And the pin REFERENCE is set to 1000 ... passed in 0.000s
    When the pin VALUE is set to 900 ... passed in 0.001s
    Then the pin GREEN_LED should be ON ... passed in 1.302s
    And the pin YELLOW_LED should be OFF ... passed in 0.000s
    And the pin RED_LED should be OFF ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
Defined aliases: {'REFERENCE': 'A0', 'VALUE': 'A1', 'GREEN_LED': 'D10', 'YELLOW_LED': 'D11', 'RED_LED': 'D12'}
Sent WebSocket message: {"type": "pinMode", "pin": "D10", "mode": "digital"}
Sent WebSocket message: {"type": "pinMode", "pin": "D11", "mode": "digital"}
Sent WebSocket message: {"type": "pinMode", "pin": "D12", "mode": "digital"}
Sent WebSocket message: {"type": "pinState", "pin": "A0", "state": 1000}
Sent WebSocket message: {"type": "pinState", "pin": "A1", "state": 900}
Background listener received: {'type': 'pinState', 'pin': 'D10', 'state': True}
Background listener received: {'type': 'pinState', 'pin': 'D11', 'state': False}
Background listener received: {'type': 'pinState', 'pin': 'D12', 'state': False}

]]>
</system-out></testcase><testcase classname="led_behavior.LED Behavior based on Reference and Value Pins" name="Value greater than Reference, red led is on" status="passed" time="0.102462"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Value greater than Reference, red led is on
    Given the following aliases are defined ... passed in 0.000s
      | alias      | pin |
      | REFERENCE  | A0  |
      | VALUE      | A1  |
      | GREEN_LED  | D10 |
      | YELLOW_LED | D11 |
      | RED_LED    | D12 |
    Given the pin GREEN_LED is watched ... passed in 0.000s
    And the pin YELLOW_LED is watched ... passed in 0.000s
    And the pin RED_LED is watched ... passed in 0.000s
    And the pin REFERENCE is set to 1022 ... passed in 0.000s
    When the pin VALUE is set to 1023 ... passed in 0.000s
    Then the pin GREEN_LED should be OFF ... passed in 0.100s
    And the pin YELLOW_LED should be OFF ... passed in 0.000s
    And the pin RED_LED should be ON ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
Defined aliases: {'REFERENCE': 'A0', 'VALUE': 'A1', 'GREEN_LED': 'D10', 'YELLOW_LED': 'D11', 'RED_LED': 'D12'}
Sent WebSocket message: {"type": "pinMode", "pin": "D10", "mode": "digital"}
Sent WebSocket message: {"type": "pinMode", "pin": "D11", "mode": "digital"}
Sent WebSocket message: {"type": "pinMode", "pin": "D12", "mode": "digital"}
Sent WebSocket message: {"type": "pinState", "pin": "A0", "state": 1022}
Sent WebSocket message: {"type": "pinState", "pin": "A1", "state": 1023}
Background listener received: {'type': 'pinState', 'pin': 'D10', 'state': True}
Background listener received: {'type': 'pinState', 'pin': 'D11', 'state': False}
Background listener received: {'type': 'pinState', 'pin': 'D12', 'state': False}
Background listener received: {'type': 'pinState', 'pin': 'D12', 'state': True}
Background listener received: {'type': 'pinState', 'pin': 'D10', 'state': False}

]]>
</system-out></testcase><testcase classname="led_behavior.LED Behavior based on Reference and Value Pins" name="Value is greater within 90% of Reference, yellow led is on" status="passed" time="0.102025"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Value is greater within 90% of Reference, yellow led is on
    Given the following aliases are defined ... passed in 0.000s
      | alias      | pin |
      | REFERENCE  | A0  |
      | VALUE      | A1  |
      | GREEN_LED  | D10 |
      | YELLOW_LED | D11 |
      | RED_LED    | D12 |
    Given the pin GREEN_LED is watched ... passed in 0.000s
    And the pin YELLOW_LED is watched ... passed in 0.000s
    And the pin RED_LED is watched ... passed in 0.000s
    And the pin REFERENCE is set to 1000 ... passed in 0.000s
    When the pin VALUE is set to 901 ... passed in 0.000s
    Then the pin GREEN_LED should be OFF ... passed in 0.000s
    And the pin YELLOW_LED should be ON ... passed in 0.100s
    And the pin RED_LED should be OFF ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
Defined aliases: {'REFERENCE': 'A0', 'VALUE': 'A1', 'GREEN_LED': 'D10', 'YELLOW_LED': 'D11', 'RED_LED': 'D12'}
Sent WebSocket message: {"type": "pinMode", "pin": "D10", "mode": "digital"}
Sent WebSocket message: {"type": "pinMode", "pin": "D11", "mode": "digital"}
Sent WebSocket message: {"type": "pinMode", "pin": "D12", "mode": "digital"}
Sent WebSocket message: {"type": "pinState", "pin": "A0", "state": 1000}
Sent WebSocket message: {"type": "pinState", "pin": "A1", "state": 901}
Background listener received: {'type': 'pinState', 'pin': 'D10', 'state': False}
Background listener received: {'type': 'pinState', 'pin': 'D11', 'state': False}
Background listener received: {'type': 'pinState', 'pin': 'D12', 'state': True}
Background listener received: {'type': 'pinState', 'pin': 'D12', 'state': False}
Background listener received: {'type': 'pinState', 'pin': 'D10', 'state': True}
Background listener received: {'type': 'pinState', 'pin': 'D11', 'state': True}
Background listener received: {'type': 'pinState', 'pin': 'D10', 'state': False}

]]>
</system-out></testcase></testsuite>